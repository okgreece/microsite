# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-11-23 14:54
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('url', models.URLField(verbose_name='URL')),
                ('viz_type', models.CharField(choices=[('TreeMap', 'TreeMap')], max_length=200, verbose_name='Visualization Type')),
                ('show_tables', models.BooleanField(default=False, verbose_name='Show Tables?')),
            ],
            options={
                'verbose_name': 'Dataset',
                'verbose_name_plural': 'Datasets',
            },
        ),
        migrations.CreateModel(
            name='Hierarchy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Hierarchy',
                'verbose_name_plural': 'Hierarchies',
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Measure',
                'verbose_name_plural': 'Measures',
            },
        ),
        migrations.CreateModel(
            name='Microsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Microsite',
                'verbose_name_plural': 'Microsites',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('country', models.CharField(max_length=200, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vizmanager.Municipality', verbose_name='Municipality')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('primary_color', models.CharField(max_length=20, verbose_name='Primary Color')),
                ('secondary_color', models.CharField(max_length=20, verbose_name='Secondary Color')),
                ('font', models.CharField(max_length=50, verbose_name='Font')),
                ('microsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vizmanager.Microsite', verbose_name='Microsite')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
            },
        ),
        migrations.AddField(
            model_name='microsite',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vizmanager.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='available_hierarchies',
            field=models.ManyToManyField(related_name='available_datasets', to='vizmanager.Hierarchy', verbose_name='Available Hierarchies'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='available_measures',
            field=models.ManyToManyField(related_name='available_datasets', to='vizmanager.Measure', verbose_name='Available Measures'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='microsite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vizmanager.Microsite', verbose_name='Microsite'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='selected_hierarchies',
            field=models.ManyToManyField(to='vizmanager.Hierarchy', verbose_name='Selected Hierarchies'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='selected_measures',
            field=models.ManyToManyField(to='vizmanager.Measure', verbose_name='Selected Measures'),
        ),
    ]
